FUNCTION   OPTIONS(*DIRECT)

* The following fields should be defined in the dictionary
* DEFINE     FIELD(#JSMSTS) TYPE(*CHAR) LENGTH(20)
* DEFINE     FIELD(#JSMMSG) TYPE(*CHAR) LENGTH(255)
* DEFINE     FIELD(#JSMCMD) TYPE(*CHAR) LENGTH(255)

DEFINE     FIELD(#KEYWRD) TYPE(*CHAR) LENGTH(20)
DEFINE     FIELD(#KEYVAL) TYPE(*CHAR) LENGTH(100)
DEF_LIST   NAME(#CNNLST) FIELDS((#KEYWRD)(#KEYVAL)) TYPE(*WORKING)

DEFINE     FIELD(#PRPTYP) TYPE(*CHAR) LENGTH(1)
DEFINE     FIELD(#PRPNME) TYPE(*CHAR) LENGTH(30)
DEFINE     FIELD(#PRPVAL) TYPE(*CHAR) LENGTH(100)
DEF_LIST   NAME(#PRPLST) FIELDS((#PRPTYP)(#PRPNME)(#PRPVAL)) TYPE(*WORKING)

* The following fields are used by the xml binding map
* #DEPTMENT
* #STD_TEXTS

* The following fragments are used by the xml binding map
GROUP_BY   NAME(#DEPARTMENTLISTREQUEST) FIELDS(#STD_TEXTS)

* The following lists are used by the xml binding map
DEF_LIST   NAME(#DEPARTMENT) FIELDS(#DEPTMENT) TYPE(*WORKING)

* Open service
USE        BUILTIN(JSM_OPEN) TO_GET(#JSMSTS #JSMMSG)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMSTS #JSMMSG)

* Load service
CHANGE     FIELD(#JSMCMD) TO('SERVICE_LOAD SERVICE(JMSXMLBindService) TRACE(*YES)')
USE        BUILTIN(JSM_COMMAND) WITH_ARGS(#JSMCMD) TO_GET(#JSMSTS #JSMMSG)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMSTS #JSMMSG)

* Connect
CHANGE     FIELD(#JSMCMD) TO('CONNECT VENDOR(MQSERIES) HOST(HOSTNAME) CHANNEL(USERAGENT.CHANNEL) QUEUE-MANAGER(USERAGENT.QUEUE.MANAGER) QUEUE(USERAGENT.QUEUE) SERVICE_LIST(KEYWRD,KEYVAL)')
USE        BUILTIN(JSM_COMMAND) WITH_ARGS(#JSMCMD) TO_GET(#JSMSTS #JSMMSG)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMSTS #JSMMSG #CNNLST)

* Receive message
CHANGE     FIELD(#JSMCMD) TO('RECEIVE WAITTIME(3000) SERVICE_LIST(PRPNME,PRPTYPE,PRPVAL)')
USE        BUILTIN(JSM_COMMAND) WITH_ARGS(#JSMCMD) TO_GET(#JSMSTS #JSMMSG)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMSTS #JSMMSG #PRPLST)

* Bind service to read message
CHANGE     FIELD(#JSMCMD) TO('BIND SERVICE(MLQPRO05_REQUEST) TYPE(*INBOUND) BINDTRACE(*YES)')
USE        BUILTIN(JSM_COMMAND) WITH_ARGS(#JSMCMD) TO_GET(#JSMSTS #JSMMSG)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMSTS #JSMMSG)

* Get fragment - DEPARTMENTLISTREQUEST
CHANGE     FIELD(#JSMCMD) TO('GET FRAGMENT(DEPARTMENTLISTREQUEST) SERVICE_EXCHANGE(*FIELD)')
USE        BUILTIN(JSM_COMMAND) WITH_ARGS(#JSMCMD) TO_GET(#JSMSTS #JSMMSG)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMSTS #JSMMSG)

* Get list - DEPARTMENT
CHANGE     FIELD(#JSMCMD) TO('GET LIST(DEPARTMENT) SERVICE_LIST(DEPTMENT)')
USE        BUILTIN(JSM_COMMAND) WITH_ARGS(#JSMCMD) TO_GET(#JSMSTS #JSMMSG #DEPARTMENT)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMSTS #JSMMSG)

* Disconnect from JMS
USE        BUILTIN(JSM_COMMAND) WITH_ARGS('CLOSE') TO_GET(#JSMSTS #JSMMSG)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMSTS #JSMMSG)

* Unload service
USE        BUILTIN(JSM_COMMAND) WITH_ARGS('SERVICE_UNLOAD') TO_GET(#JSMSTS #JSMMSG)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMSTS #JSMMSG)

* Close service
USE        BUILTIN(JSM_CLOSE) TO_GET(#JSMSTS #JSMMSG)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMSTS #JSMMSG)

* Check routine
SUBROUTINE NAME(CHECK) PARMS((#JSMSTS *RECEIVED) (#JSMMSG *RECEIVED))
IF         COND('#JSMSTS *NE OK')
USE        BUILTIN(JSM_CLOSE) TO_GET(#JSMSTS #JSMMSG)
MENU       MSGTXT('Java service error has occured')
ENDIF
ENDROUTINE
