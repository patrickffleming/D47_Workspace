FUNCTION   OPTIONS(*DIRECT)

* The following fields should be defined in the dictionary
* DEFINE     FIELD(#JSMSTS) TYPE(*CHAR) LENGTH(20)
* DEFINE     FIELD(#JSMMSG) TYPE(*CHAR) LENGTH(255)
* DEFINE     FIELD(#JSMCMD) TYPE(*CHAR) LENGTH(255)

* The following fields are used by the soap binding map
* #DEPTMENT
* #EMPNO
* #GIVENAME
* #SALARY
* #SECTION
* #SURNAME

* The following fragments are used by the soap binding map
GROUP_BY   NAME(#EMPLOYEE) FIELDS(#EMPNO #GIVENAME #SURNAME #SALARY)

* Open service
USE        BUILTIN(JSM_OPEN) TO_GET(#JSMSTS #JSMMSG)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMSTS #JSMMSG)

* Load service
CHANGE     FIELD(#JSMCMD) TO('SERVICE_LOAD SERVICE(SOAPServerService) TRACE(*YES)')
USE        BUILTIN(JSM_COMMAND) WITH_ARGS(#JSMCMD) TO_GET(#JSMSTS #JSMMSG)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMSTS #JSMMSG)

* Open SOAP service
CHANGE     FIELD(#JSMCMD) TO('OPEN SERVICE(MLQEMPLOYEESERVER)')
USE        BUILTIN(JSM_COMMAND) WITH_ARGS(#JSMCMD) TO_GET(#JSMSTS #JSMMSG)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMSTS #JSMMSG)

* Check for operation - MLQGETEMPLOYEES
CHANGE     FIELD(#JSMCMD) TO('GET OBJECT(*OPERATION)')
USE        BUILTIN(JSM_COMMAND) WITH_ARGS(#JSMCMD) TO_GET(#JSMSTS #JSMMSG)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMSTS #JSMMSG)
IF         COND('#JSMMSG *NE MLQGETEMPLOYEES')
* Close SOAP service and send back a SOAP fault message
USE        BUILTIN(JSM_COMMAND) WITH_ARGS('CLOSE FAULT(Incorrect operation)') TO_GET(#JSMSTS #JSMMSG)
* Close service
USE        BUILTIN(JSM_CLOSE) TO_GET(#JSMSTS #JSMMSG)
RETURN
ENDIF

* Get parameter - DEPARTMENTCODE
CHANGE     FIELD(#JSMCMD) TO('GET PARAMETER(DEPARTMENTCODE) SERVICE_EXCHANGE(*FIELD)')
USE        BUILTIN(JSM_COMMAND) WITH_ARGS(#JSMCMD) TO_GET(#JSMSTS #JSMMSG)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMSTS #JSMMSG)

* Get parameter - SECTIONCODE
CHANGE     FIELD(#JSMCMD) TO('GET PARAMETER(SECTIONCODE) SERVICE_EXCHANGE(*FIELD)')
USE        BUILTIN(JSM_COMMAND) WITH_ARGS(#JSMCMD) TO_GET(#JSMSTS #JSMMSG)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMSTS #JSMMSG)

* <<< Enter your business logic here >>>

* Set return parameter
CHANGE     FIELD(#JSMCMD) TO('SET PARAMETER(*RETURN)')
USE        BUILTIN(JSM_COMMAND) WITH_ARGS(#JSMCMD) TO_GET(#JSMSTS #JSMMSG)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMSTS #JSMMSG)

* <<< Enter the fragment loop logic for EMPLOYEE >>>

BEGIN_LOOP /* EMPLOYEE */

* Set fragment loop - EMPLOYEE
CHANGE     FIELD(#JSMCMD) TO('SET FRAGMENT(EMPLOYEE) SERVICE_EXCHANGE(*FIELD)')
USE        BUILTIN(JSM_COMMAND) WITH_ARGS(#JSMCMD) TO_GET(#JSMSTS #JSMMSG)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMSTS #JSMMSG)

END_LOOP /* EMPLOYEE */

* Close SOAP service and send back response
USE        BUILTIN(JSM_COMMAND) WITH_ARGS('CLOSE') TO_GET(#JSMSTS #JSMMSG)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMSTS #JSMMSG)

* Close service
USE        BUILTIN(JSM_CLOSE) TO_GET(#JSMSTS #JSMMSG)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMSTS #JSMMSG)

* Check routine
SUBROUTINE NAME(CHECK) PARMS((#JSMSTS *RECEIVED) (#JSMMSG *RECEIVED))
IF         COND('#JSMSTS *NE OK')
USE        BUILTIN(JSM_CLOSE) TO_GET(#JSMSTS #JSMMSG)
EXIT
ENDIF
ENDROUTINE
