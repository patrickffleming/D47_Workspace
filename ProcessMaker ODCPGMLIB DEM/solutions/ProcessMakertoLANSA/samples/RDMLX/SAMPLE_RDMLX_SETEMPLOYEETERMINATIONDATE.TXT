FUNCTION   OPTIONS(*DIRECT)

* The following fields should be defined in the dictionary
* DEFINE     FIELD(#JSMXHDLE1) TYPE(*CHAR) LENGTH(4)
* DEFINE     FIELD(#JSMXSTS) TYPE(*CHAR) LENGTH(20)
* DEFINE     FIELD(#JSMXMSG) TYPE(*CHAR) LENGTH(512)
* DEFINE     FIELD(#JSMXCMD) TYPE(*CHAR) LENGTH(512)

* The following fields are used by the soap binding map
* #EMPNO
* #PM_CASENUMBER
* #PM_TERMDATE
* #PM_TERMREASON
* #PM_TERMRET

* Open service
USE        BUILTIN(JSMX_OPEN) TO_GET(#JSMXSTS #JSMXMSG #JSMXHDLE1)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMXSTS #JSMXMSG)

* Load service
CHANGE     FIELD(#JSMXCMD) TO('SERVICE_LOAD SERVICE(SOAPServerService) SERVICE_CONTENT(*HTTP) TRACE(*YES)')
USE        BUILTIN(JSMX_COMMAND) WITH_ARGS(#JSMXHDLE1 #JSMXCMD) TO_GET(#JSMXSTS #JSMXMSG)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMXSTS #JSMXMSG)

* Open SOAP service
CHANGE     FIELD(#JSMXCMD) TO('OPEN SERVICE(PROCESSMAKERTOLANSA)')
USE        BUILTIN(JSMX_COMMAND) WITH_ARGS(#JSMXHDLE1 #JSMXCMD) TO_GET(#JSMXSTS #JSMXMSG)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMXSTS #JSMXMSG)

* Check for operation - SETEMPLOYEETERMINATIONDATE
CHANGE     FIELD(#JSMXCMD) TO('GET OBJECT(*OPERATION)')
USE        BUILTIN(JSMX_COMMAND) WITH_ARGS(#JSMXHDLE1 #JSMXCMD) TO_GET(#JSMXSTS #JSMXMSG)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMXSTS #JSMXMSG)
IF         COND('#JSMXMSG *NE SETEMPLOYEETERMINATIONDATE')
* Close SOAP service and send back a SOAP fault message
USE        BUILTIN(JSMX_COMMAND) WITH_ARGS(#JSMXHDLE1 'CLOSE FAULT(Incorrect operation)') TO_GET(#JSMXSTS #JSMXMSG)
* Close service
USE        BUILTIN(JSMX_CLOSE) WITH_ARGS(#JSMXHDLE1) TO_GET(#JSMXSTS #JSMXMSG)
RETURN
ENDIF

* Get parameter - EMPLOYEENUMBER
CHANGE     FIELD(#JSMXCMD) TO('GET PARAMETER(EMPLOYEENUMBER) SERVICE_EXCHANGE(*FIELD)')
USE        BUILTIN(JSMX_COMMAND) WITH_ARGS(#JSMXHDLE1 #JSMXCMD) TO_GET(#JSMXSTS #JSMXMSG)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMXSTS #JSMXMSG)

* Get parameter - TERMINATIONDATE
CHANGE     FIELD(#JSMXCMD) TO('GET PARAMETER(TERMINATIONDATE) SERVICE_EXCHANGE(*FIELD)')
USE        BUILTIN(JSMX_COMMAND) WITH_ARGS(#JSMXHDLE1 #JSMXCMD) TO_GET(#JSMXSTS #JSMXMSG)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMXSTS #JSMXMSG)

* Get parameter - PROCESSMAKERCASENUMBER
CHANGE     FIELD(#JSMXCMD) TO('GET PARAMETER(PROCESSMAKERCASENUMBER) SERVICE_EXCHANGE(*FIELD)')
USE        BUILTIN(JSMX_COMMAND) WITH_ARGS(#JSMXHDLE1 #JSMXCMD) TO_GET(#JSMXSTS #JSMXMSG)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMXSTS #JSMXMSG)

* Get parameter - TERMINATIONREASON
CHANGE     FIELD(#JSMXCMD) TO('GET PARAMETER(TERMINATIONREASON) SERVICE_EXCHANGE(*FIELD)')
USE        BUILTIN(JSMX_COMMAND) WITH_ARGS(#JSMXHDLE1 #JSMXCMD) TO_GET(#JSMXSTS #JSMXMSG)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMXSTS #JSMXMSG)

* <<< Enter your business logic here >>>

* Set return parameter
CHANGE     FIELD(#JSMXCMD) TO('SET PARAMETER(*RETURN) SERVICE_EXCHANGE(*FIELD)')
USE        BUILTIN(JSMX_COMMAND) WITH_ARGS(#JSMXHDLE1 #JSMXCMD) TO_GET(#JSMXSTS #JSMXMSG)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMXSTS #JSMXMSG)

* Close SOAP service and send back response
USE        BUILTIN(JSMX_COMMAND) WITH_ARGS(#JSMXHDLE1 'CLOSE') TO_GET(#JSMXSTS #JSMXMSG)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMXSTS #JSMXMSG)

* Close service
USE        BUILTIN(JSMX_CLOSE) WITH_ARGS(#JSMXHDLE1) TO_GET(#JSMXSTS #JSMXMSG)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMXSTS #JSMXMSG)

* Check routine
SUBROUTINE NAME(CHECK) PARMS((#JSMXSTS *RECEIVED) (#JSMXMSG *RECEIVED))
IF         COND('#JSMXSTS *NE OK')
USE        BUILTIN(JSMX_CLOSE) WITH_ARGS(#JSMXHDLE1) TO_GET(#JSMXSTS #JSMXMSG)
EXIT
ENDIF
ENDROUTINE
