FUNCTION   OPTIONS(*DIRECT)

* The following fields should be defined in the dictionary
* DEFINE     FIELD(#JSMSTS) TYPE(*CHAR) LENGTH(20)
* DEFINE     FIELD(#JSMMSG) TYPE(*CHAR) LENGTH(255)
* DEFINE     FIELD(#JSMCMD) TYPE(*CHAR) LENGTH(255)

* The following fields are used by the xml binding map
* #ADDRESS1
* #ADDRESS2
* #DEPTMENT
* #EMPNO
* #GIVENAME
* #PHONEHME
* #PMBEMN
* #PMBEMQ
* #PMWCID
* #PMWDTM
* #PMWEVT
* #PMWOBJ
* #PMWUSR
* #PMWWNME
* #POSTCODE
* #SECTION
* #SURNAME
* #USALARY
* #USTARTDTE

* The following fragments are used by the xml binding map
GROUP_BY   NAME(#BEMS) FIELDS(#PMBEMN #PMBEMQ)
GROUP_BY   NAME(#DATA) FIELDS()
GROUP_BY   NAME(#EMPLOYEE) FIELDS(#EMPNO #SURNAME #GIVENAME #ADDRESS1 #ADDRESS2 #POSTCODE #PHONEHME #PHONEHME #USTARTDTE #DEPTMENT #SECTION #USALARY)
GROUP_BY   NAME(#IDENTIFIER) FIELDS(#PMWOBJ #PMWEVT #PMWWNME #PMWCID #PMWUSR #PMWDTM)
GROUP_BY   NAME(#WORKFLOW) FIELDS()

* Open service
USE        BUILTIN(JSM_OPEN) TO_GET(#JSMSTS #JSMMSG)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMSTS #JSMMSG)

* Load service
CHANGE     FIELD(#JSMCMD) TO('SERVICE_LOAD SERVICE(HTTPInboundXMLBindService) TRACE(*YES)')
USE        BUILTIN(JSM_COMMAND) WITH_ARGS(#JSMCMD) TO_GET(#JSMSTS #JSMMSG)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMSTS #JSMMSG)

* Bind service to read HTTP request content
CHANGE     FIELD(#JSMCMD) TO('BIND SERVICE(ADDEMPLOYEE) TYPE(*INBOUND) BINDTRACE(*YES)')
USE        BUILTIN(JSM_COMMAND) WITH_ARGS(#JSMCMD) TO_GET(#JSMSTS #JSMMSG)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMSTS #JSMMSG)

* Get fragment - WORKFLOW
CHANGE     FIELD(#JSMCMD) TO('GET FRAGMENT(WORKFLOW) SERVICE_EXCHANGE(*FIELD)')
USE        BUILTIN(JSM_COMMAND) WITH_ARGS(#JSMCMD) TO_GET(#JSMSTS #JSMMSG)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMSTS #JSMMSG)

* Get fragment - IDENTIFIER
CHANGE     FIELD(#JSMCMD) TO('GET FRAGMENT(IDENTIFIER) SERVICE_EXCHANGE(*FIELD)')
USE        BUILTIN(JSM_COMMAND) WITH_ARGS(#JSMCMD) TO_GET(#JSMSTS #JSMMSG)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMSTS #JSMMSG)

* Get fragment - BEMS
CHANGE     FIELD(#JSMCMD) TO('GET FRAGMENT(BEMS) SERVICE_EXCHANGE(*FIELD)')
USE        BUILTIN(JSM_COMMAND) WITH_ARGS(#JSMCMD) TO_GET(#JSMSTS #JSMMSG)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMSTS #JSMMSG)

* Get fragment - DATA
CHANGE     FIELD(#JSMCMD) TO('GET FRAGMENT(DATA) SERVICE_EXCHANGE(*FIELD)')
USE        BUILTIN(JSM_COMMAND) WITH_ARGS(#JSMCMD) TO_GET(#JSMSTS #JSMMSG)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMSTS #JSMMSG)

* Get fragment - EMPLOYEE
CHANGE     FIELD(#JSMCMD) TO('GET FRAGMENT(EMPLOYEE) SERVICE_EXCHANGE(*FIELD)')
USE        BUILTIN(JSM_COMMAND) WITH_ARGS(#JSMCMD) TO_GET(#JSMSTS #JSMMSG)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMSTS #JSMMSG)

* Bind service to create HTTP response content
CHANGE     FIELD(#JSMCMD) TO('BIND SERVICE( <<<outbound.class>>> ) TYPE(*OUTBOUND)')
USE        BUILTIN(JSM_COMMAND) WITH_ARGS(#JSMCMD) TO_GET(#JSMSTS #JSMMSG)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMSTS #JSMMSG)


* <<< Outbound binding logic goes here >>>


* Write content
CHANGE     FIELD(#JSMCMD) TO('WRITE INDENT(*YES) BINDTRACE(*YES)')
USE        BUILTIN(JSM_COMMAND) WITH_ARGS(#JSMCMD) TO_GET(#JSMSTS #JSMMSG)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMSTS #JSMMSG)

* Send HTTP response content
* The send command must be the last service command
CHANGE     FIELD(#JSMCMD) TO('SEND')
USE        BUILTIN(JSM_COMMAND) WITH_ARGS(#JSMCMD) TO_GET(#JSMSTS #JSMMSG)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMSTS #JSMMSG)

* Close service
USE        BUILTIN(JSM_CLOSE) TO_GET(#JSMSTS #JSMMSG)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMSTS #JSMMSG)

* Check routine
SUBROUTINE NAME(CHECK) PARMS((#JSMSTS *RECEIVED) (#JSMMSG *RECEIVED))
IF         COND('#JSMSTS *NE OK')
USE        BUILTIN(JSM_CLOSE) TO_GET(#JSMSTS #JSMMSG)
ENDIF
ENDROUTINE
