FUNCTION   OPTIONS(*DIRECT)

* The following fields should be defined in the dictionary
* DEFINE     FIELD(#JSMXHDLE1) TYPE(*CHAR) LENGTH(4)
* DEFINE     FIELD(#JSMXSTS) TYPE(*CHAR) LENGTH(20)
* DEFINE     FIELD(#JSMXMSG) TYPE(*CHAR) LENGTH(512)
* DEFINE     FIELD(#JSMXCMD) TYPE(*CHAR) LENGTH(512)

* The following fields are used by the soap binding map
* #NEWCASENAM
* #NEWCASEVAL
* #PM_CASEID
* #PM_SESSIONID

* The following fragments are used by the soap binding map
GROUP_BY   NAME(#NEWSENDVARIABLEREQUEST) FIELDS(#PM_CASEID #PM_SESSIONID)

* The following lists are used by the soap binding map
DEF_LIST   NAME(#NEWCASEVARS) FIELDS(#NEWCASENAM #NEWCASEVAL) TYPE(*WORKING)

* Open service
USE        BUILTIN(JSMX_OPEN) TO_GET(#JSMXSTS #JSMXMSG #JSMXHDLE1)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMXSTS #JSMXMSG)

* Load service
CHANGE     FIELD(#JSMXCMD) TO('SERVICE_LOAD SERVICE(SOAPAgentService) TRACE(*YES)')
USE        BUILTIN(JSMX_COMMAND) WITH_ARGS(#JSMXHDLE1 #JSMXCMD) TO_GET(#JSMXSTS #JSMXMSG)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMXSTS #JSMXMSG)

* Open SOAP service
CHANGE     FIELD(#JSMXCMD) TO('OPEN SERVICE(PROCESSMAKER WSDL)')
USE        BUILTIN(JSMX_COMMAND) WITH_ARGS(#JSMXHDLE1 #JSMXCMD) TO_GET(#JSMXSTS #JSMXMSG)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMXSTS #JSMXMSG)

* Set operation - SENDVARIABLES
CHANGE     FIELD(#JSMXCMD) TO('SET OPERATION(SENDVARIABLES)')
USE        BUILTIN(JSMX_COMMAND) WITH_ARGS(#JSMXHDLE1 #JSMXCMD) TO_GET(#JSMXSTS #JSMXMSG)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMXSTS #JSMXMSG)

* Set parameter - SENDVARIABLESREQUEST
CHANGE     FIELD(#JSMXCMD) TO('SET PARAMETER(SENDVARIABLESREQUEST)')
USE        BUILTIN(JSMX_COMMAND) WITH_ARGS(#JSMXHDLE1 #JSMXCMD) TO_GET(#JSMXSTS #JSMXMSG)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMXSTS #JSMXMSG)

* Set fragment - NEWSENDVARIABLEREQUEST
CHANGE     FIELD(#JSMXCMD) TO('SET FRAGMENT(NEWSENDVARIABLEREQUEST) SERVICE_EXCHANGE(*FIELD)')
USE        BUILTIN(JSMX_COMMAND) WITH_ARGS(#JSMXHDLE1 #JSMXCMD) TO_GET(#JSMXSTS #JSMXMSG)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMXSTS #JSMXMSG)

* Set list - NEWCASEVARS
CHANGE     FIELD(#JSMXCMD) TO('SET LIST(NEWCASEVARS)')
USE        BUILTIN(JSMX_COMMAND) WITH_ARGS(#JSMXHDLE1 #JSMXCMD) TO_GET(#JSMXSTS #JSMXMSG #NEWCASEVARS)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMXSTS #JSMXMSG)

* Call remote service
CHANGE     FIELD(#JSMXCMD) TO('CALL')
USE        BUILTIN(JSMX_COMMAND) WITH_ARGS(#JSMXHDLE1 #JSMXCMD) TO_GET(#JSMXSTS #JSMXMSG)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMXSTS #JSMXMSG)

* Close SOAP service
USE        BUILTIN(JSMX_COMMAND) WITH_ARGS(#JSMXHDLE1 'CLOSE') TO_GET(#JSMXSTS #JSMXMSG)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMXSTS #JSMXMSG)

* Unload service
USE        BUILTIN(JSMX_COMMAND) WITH_ARGS(#JSMXHDLE1 'SERVICE_UNLOAD') TO_GET(#JSMXSTS #JSMXMSG)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMXSTS #JSMXMSG)

* Close service
USE        BUILTIN(JSMX_CLOSE) WITH_ARGS(#JSMXHDLE1) TO_GET(#JSMXSTS #JSMXMSG)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMXSTS #JSMXMSG)

* Check routine
SUBROUTINE NAME(CHECK) PARMS((#JSMXSTS *RECEIVED) (#JSMXMSG *RECEIVED))
IF         COND('#JSMXSTS *NE OK')
USE        BUILTIN(JSMX_CLOSE) WITH_ARGS(#JSMXHDLE1) TO_GET(#JSMXSTS #JSMXMSG)
MENU       MSGTXT('Java service error has occured')
ENDIF
ENDROUTINE
