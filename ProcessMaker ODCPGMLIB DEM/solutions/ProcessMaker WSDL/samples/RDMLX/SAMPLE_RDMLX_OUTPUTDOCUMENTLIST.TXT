FUNCTION   OPTIONS(*DIRECT)

* The following fields should be defined in the dictionary
* DEFINE     FIELD(#JSMXHDLE1) TYPE(*CHAR) LENGTH(4)
* DEFINE     FIELD(#JSMXSTS) TYPE(*CHAR) LENGTH(20)
* DEFINE     FIELD(#JSMXMSG) TYPE(*CHAR) LENGTH(512)
* DEFINE     FIELD(#JSMXCMD) TYPE(*CHAR) LENGTH(512)

* The following fields are used by the soap binding map
* #PM_DOCDATE
* #PM_DOCINDEX
* #PM_DOCNAM
* #PM_DOCPATH
* #PM_DOCTYPE
* #PM_DOCUID
* #PM_DOCUMENT
* #PM_DOCUSER
* #PM_DOCVER

* The following fragments are used by the soap binding map
GROUP_BY   NAME(#OUTPUTDOCUMENTLISTRESPONSE) FIELDS(#PM_DOCUSER #PM_DOCDATE #PM_DOCUMENT #PM_DOCNAM #PM_DOCUID #PM_DOCINDEX #PM_DOCPATH #PM_DOCTYPE #PM_DOCVER)

* Open service
USE        BUILTIN(JSMX_OPEN) TO_GET(#JSMXSTS #JSMXMSG #JSMXHDLE1)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMXSTS #JSMXMSG)

* Load service
CHANGE     FIELD(#JSMXCMD) TO('SERVICE_LOAD SERVICE(SOAPAgentService) TRACE(*YES)')
USE        BUILTIN(JSMX_COMMAND) WITH_ARGS(#JSMXHDLE1 #JSMXCMD) TO_GET(#JSMXSTS #JSMXMSG)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMXSTS #JSMXMSG)

* Open SOAP service
CHANGE     FIELD(#JSMXCMD) TO('OPEN SERVICE(PROCESSMAKER WSDL)')
USE        BUILTIN(JSMX_COMMAND) WITH_ARGS(#JSMXHDLE1 #JSMXCMD) TO_GET(#JSMXSTS #JSMXMSG)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMXSTS #JSMXMSG)

* Set operation - OUTPUTDOCUMENTLIST
CHANGE     FIELD(#JSMXCMD) TO('SET OPERATION(OUTPUTDOCUMENTLIST)')
USE        BUILTIN(JSMX_COMMAND) WITH_ARGS(#JSMXHDLE1 #JSMXCMD) TO_GET(#JSMXSTS #JSMXMSG)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMXSTS #JSMXMSG)

* Set parameter - OUTPUTDOCUMENTLISTREQUEST
CHANGE     FIELD(#JSMCMD) TO('SET PARAMETER(OUTPUTDOCUMENTLISTREQUEST) SERVICE_EXCHANGE(*FIELD)')
USE        BUILTIN(JSM_COMMAND) WITH_ARGS(#JSMCMD) TO_GET(#JSMSTS #JSMMSG)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMSTS #JSMMSG)

* Call remote service
CHANGE     FIELD(#JSMXCMD) TO('CALL')
USE        BUILTIN(JSMX_COMMAND) WITH_ARGS(#JSMXHDLE1 #JSMXCMD) TO_GET(#JSMXSTS #JSMXMSG)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMXSTS #JSMXMSG)

* Check for a possible null return parameter
CHANGE     FIELD(#JSMXCMD) TO('IS NOT_NULL(*RETURN)')
USE        BUILTIN(JSMX_COMMAND) WITH_ARGS(#JSMXHDLE1 #JSMXCMD) TO_GET(#JSMXSTS #JSMXMSG)
IF         COND('#JSMXSTS *EQ OK')

BEGIN_LOOP /* OUTPUTDOCUMENTLISTRESPONSE */

* Get fragment loop - OUTPUTDOCUMENTLISTRESPONSE
CHANGE     FIELD(#JSMXCMD) TO('GET FRAGMENT(OUTPUTDOCUMENTLISTRESPONSE) SERVICE_EXCHANGE(*FIELD)')
USE        BUILTIN(JSMX_COMMAND) WITH_ARGS(#JSMXHDLE1 #JSMXCMD) TO_GET(#JSMXSTS #JSMXMSG)
LEAVE      IF('#JSMXSTS *EQ NOFRAGMENT')
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMXSTS #JSMXMSG)

END_LOOP /* OUTPUTDOCUMENTLISTRESPONSE */

ENDIF

* Close SOAP service
USE        BUILTIN(JSMX_COMMAND) WITH_ARGS(#JSMXHDLE1 'CLOSE') TO_GET(#JSMXSTS #JSMXMSG)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMXSTS #JSMXMSG)

* Unload service
USE        BUILTIN(JSMX_COMMAND) WITH_ARGS(#JSMXHDLE1 'SERVICE_UNLOAD') TO_GET(#JSMXSTS #JSMXMSG)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMXSTS #JSMXMSG)

* Close service
USE        BUILTIN(JSMX_CLOSE) WITH_ARGS(#JSMXHDLE1) TO_GET(#JSMXSTS #JSMXMSG)
EXECUTE    SUBROUTINE(CHECK) WITH_PARMS(#JSMXSTS #JSMXMSG)

* Check routine
SUBROUTINE NAME(CHECK) PARMS((#JSMXSTS *RECEIVED) (#JSMXMSG *RECEIVED))
IF         COND('#JSMXSTS *NE OK')
USE        BUILTIN(JSMX_CLOSE) WITH_ARGS(#JSMXHDLE1) TO_GET(#JSMXSTS #JSMXMSG)
MENU       MSGTXT('Java service error has occured')
ENDIF
ENDROUTINE
