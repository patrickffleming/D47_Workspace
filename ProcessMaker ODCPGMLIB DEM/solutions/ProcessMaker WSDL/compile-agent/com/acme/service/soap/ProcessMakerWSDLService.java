/**
 * ProcessMakerWSDLService.java
 *
 * This file was generated by LANSA Integrator SOAP Agent Wizard
 */
package com.acme.service.soap ;

public class ProcessMakerWSDLService implements com.lansa.jsm.service.SOAPAgentHandler
{

    /*
        Operation - userList
    */

    public final void setOperation_USERLIST ()
    {
    }

    /*
        Operation Request - userList
    */

    public final void prepareRequest_USERLIST ( com.lansa.jsm.service.SOAPAgentRequest request ) throws Exception
    {
        request.prepareParameter ( "USERLISTREQUEST", com.processmaker.www.UserListRequest.class, false, true ) ;
    }

    /*
        Operation Parameter - userList
    */

    public final void setParameter_USERLIST_USERLISTREQUEST ( com.lansa.jsm.service.SOAPAgentParameter parameter, com.lansa.jsm.service.SOAPAgentBind bind ) throws Exception
    {
        parameter.setEntity ( "sessionId", bind.getFieldValue ( "PM_SESSIONID" ), null, null ) ;
    }

    /*
        Operation Response - userList
    */

    public final void prepareResponse_USERLIST ( com.lansa.jsm.service.SOAPAgentResponse response ) throws Exception
    {
        response.prepareFragment ( new String[] { "USERLISTRESPONSE" }, com.processmaker.www.UserListStruct.class, true, true, null ) ;
    }

    /*
        Operation Fragment - userList
    */

    public final void getFragment_USERLIST_USERLISTRESPONSE ( com.lansa.jsm.service.SOAPAgentResponseFragment fragment, com.lansa.jsm.service.SOAPAgentBind bind ) throws Exception
    {
        bind.setFieldValue ( "PM_GUID", fragment.getEntity ( "guid", null ) ) ;
        bind.setFieldValue ( "PM_USERNAME", fragment.getEntity ( "name", null ) ) ;
    }

    /*
        Operation Return - userList
    */

    public final void getReturnParameter_USERLIST ( com.lansa.jsm.service.SOAPAgentResponse response, com.lansa.jsm.service.SOAPAgentBind bind ) throws Exception
    {
    }

    /*
        Operation Call - userList
    */

    public final com.lansa.jsm.service.SOAPAgentResponse callOperation_USERLIST ( com.lansa.jsm.service.SOAPAgentRequest request, String user, String password, String url ) throws Exception
    {
        com.processmaker.www.ProcessMakerServiceLocator locator = new com.processmaker.www.ProcessMakerServiceLocator () ;

        String endPoint = locator.getProcessMakerServiceSoapAddress () ;

        if ( url != null )
        {
            endPoint = url ;
        }

        com.processmaker.www.ProcessMakerServiceSoapStub stub = (com.processmaker.www.ProcessMakerServiceSoapStub)locator.getProcessMakerServiceSoap ( new java.net.URL ( endPoint ) ) ;

        if ( user != null && password != null )
        {
            stub.setUsername ( user ) ;

            stub.setPassword ( password ) ;
        }

        /* No include file AGENT_INCLUDE.TXT */

        request.traceStub ( stub ) ;

        return new com.lansa.jsm.service.SOAPAgentResponse ( stub.userList( (com.processmaker.www.UserListRequest)request.getParameterValueObject ( "USERLISTREQUEST" ) ) ) ;
    }

    /*
        Operation - newCaseImpersonate
    */

    public final void setOperation_NEWCASEIMPERSONATE ()
    {
    }

    /*
        Operation Request - newCaseImpersonate
    */

    public final void prepareRequest_NEWCASEIMPERSONATE ( com.lansa.jsm.service.SOAPAgentRequest request ) throws Exception
    {
        request.prepareParameter ( "NEWCASEIMPERSONATEREQUEST", com.processmaker.www.NewCaseImpersonateRequest.class, false, true ) ;
        request.prepareFragment ( "NEWCASEIMPERSONATEREQUEST", new String[] { "NEWCASEIMPERSONATEREQUEST" }, com.processmaker.www.NewCaseImpersonateRequest.class, false, true, null ) ;
        request.prepareList ( "NEWCASEIMPERSONATEREQUEST", new String[] { "NEWCASEIMPERSONATEREQUEST", "NEWCASEVARS" }, com.processmaker.www.VariableListStruct.class, true, true, "setVariables" ) ;
    }

    /*
        Operation Parameter - newCaseImpersonate
    */

    public final void setParameter_NEWCASEIMPERSONATE_NEWCASEIMPERSONATEREQUEST ( com.lansa.jsm.service.SOAPAgentParameter parameter, com.lansa.jsm.service.SOAPAgentBind bind ) throws Exception
    {
    }

    /*
        Operation Fragment - newCaseImpersonate
    */

    public final void setFragment_NEWCASEIMPERSONATE_NEWCASEIMPERSONATEREQUEST_NEWCASEIMPERSONATEREQUEST ( com.lansa.jsm.service.SOAPAgentRequestFragment fragment, com.lansa.jsm.service.SOAPAgentBind bind ) throws Exception
    {
        fragment.setEntity ( "processId", bind.getFieldValue ( "PM_PROCESSID" ), null, null ) ;
        fragment.setEntity ( "sessionId", bind.getFieldValue ( "PM_SESSIONID" ), null, null ) ;
        fragment.setEntity ( "taskId", bind.getFieldValue ( "PM_TASKID" ), null, null ) ;
        fragment.setEntity ( "userId", bind.getFieldValue ( "PM_USERGUID" ), null, null ) ;
    }

    public final com.lansa.jsm.service.SOAPAgentList setList_NEWCASEIMPERSONATE_NEWCASEIMPERSONATEREQUEST_NEWCASEVARS () throws Exception
    {
        return new com.lansa.jsm.service.SOAPAgentList ( new String[] { "NEWCASENAM", "NEWCASEVAL" }, new String[] { "name", "value" }, new com.lansa.jsm.service.SOAPEntityFormat[] { null, null } ) ;
    }

    /*
        Operation Response - newCaseImpersonate
    */

    public final void prepareResponse_NEWCASEIMPERSONATE ( com.lansa.jsm.service.SOAPAgentResponse response ) throws Exception
    {
    }

    /*
        Operation Return - newCaseImpersonate
    */

    public final void getReturnParameter_NEWCASEIMPERSONATE ( com.lansa.jsm.service.SOAPAgentResponse response, com.lansa.jsm.service.SOAPAgentBind bind ) throws Exception
    {
        bind.setFieldValue ( "PM_CASEID", response.getEntity ( "caseId", null ) ) ;
        bind.setFieldValue ( "PM_CASENUMBER", response.getEntity ( "caseNumber", null ) ) ;
        bind.setFieldValue ( "PM_MESSAGE", response.getEntity ( "message", null ) ) ;
        bind.setFieldValue ( "PM_STATUSCODE", response.getEntity ( "status_code", null ) ) ;
        bind.setFieldValue ( "PM_TIMESTAMP", response.getEntity ( "timestamp", null ) ) ;
    }

    /*
        Operation Call - newCaseImpersonate
    */

    public final com.lansa.jsm.service.SOAPAgentResponse callOperation_NEWCASEIMPERSONATE ( com.lansa.jsm.service.SOAPAgentRequest request, String user, String password, String url ) throws Exception
    {
        com.processmaker.www.ProcessMakerServiceLocator locator = new com.processmaker.www.ProcessMakerServiceLocator () ;

        String endPoint = locator.getProcessMakerServiceSoapAddress () ;

        if ( url != null )
        {
            endPoint = url ;
        }

        com.processmaker.www.ProcessMakerServiceSoapStub stub = (com.processmaker.www.ProcessMakerServiceSoapStub)locator.getProcessMakerServiceSoap ( new java.net.URL ( endPoint ) ) ;

        if ( user != null && password != null )
        {
            stub.setUsername ( user ) ;

            stub.setPassword ( password ) ;
        }

        /* No include file AGENT_INCLUDE.TXT */

        request.traceStub ( stub ) ;

        return new com.lansa.jsm.service.SOAPAgentResponse ( stub.newCaseImpersonate( (com.processmaker.www.NewCaseImpersonateRequest)request.getParameterValueObject ( "NEWCASEIMPERSONATEREQUEST" ) ) ) ;
    }

    /*
        Operation - executeTrigger
    */

    public final void setOperation_EXECUTETRIGGER ()
    {
    }

    /*
        Operation Request - executeTrigger
    */

    public final void prepareRequest_EXECUTETRIGGER ( com.lansa.jsm.service.SOAPAgentRequest request ) throws Exception
    {
        request.prepareParameter ( "EXECUTETRIGGERREQUEST", com.processmaker.www.ExecuteTriggerRequest.class, false, true ) ;
    }

    /*
        Operation Parameter - executeTrigger
    */

    public final void setParameter_EXECUTETRIGGER_EXECUTETRIGGERREQUEST ( com.lansa.jsm.service.SOAPAgentParameter parameter, com.lansa.jsm.service.SOAPAgentBind bind ) throws Exception
    {
        parameter.setEntity ( "caseId", bind.getFieldValue ( "PM_CASEID" ), null, null ) ;
        parameter.setEntity ( "delIndex", bind.getFieldValue ( "PM_DELINDEX" ), null, null ) ;
        parameter.setEntity ( "sessionId", bind.getFieldValue ( "PM_SESSIONID" ), null, null ) ;
        parameter.setEntity ( "triggerIndex", bind.getFieldValue ( "PM_TRIGGERINDEX" ), null, null ) ;
    }

    /*
        Operation Response - executeTrigger
    */

    public final void prepareResponse_EXECUTETRIGGER ( com.lansa.jsm.service.SOAPAgentResponse response ) throws Exception
    {
    }

    /*
        Operation Return - executeTrigger
    */

    public final void getReturnParameter_EXECUTETRIGGER ( com.lansa.jsm.service.SOAPAgentResponse response, com.lansa.jsm.service.SOAPAgentBind bind ) throws Exception
    {
        bind.setFieldValue ( "PM_MESSAGE", response.getEntity ( "message", null ) ) ;
        bind.setFieldValue ( "PM_STATUSCODE", response.getEntity ( "status_code", null ) ) ;
        bind.setFieldValue ( "PM_TIMESTAMP", response.getEntity ( "timestamp", null ) ) ;
    }

    /*
        Operation Call - executeTrigger
    */

    public final com.lansa.jsm.service.SOAPAgentResponse callOperation_EXECUTETRIGGER ( com.lansa.jsm.service.SOAPAgentRequest request, String user, String password, String url ) throws Exception
    {
        com.processmaker.www.ProcessMakerServiceLocator locator = new com.processmaker.www.ProcessMakerServiceLocator () ;

        String endPoint = locator.getProcessMakerServiceSoapAddress () ;

        if ( url != null )
        {
            endPoint = url ;
        }

        com.processmaker.www.ProcessMakerServiceSoapStub stub = (com.processmaker.www.ProcessMakerServiceSoapStub)locator.getProcessMakerServiceSoap ( new java.net.URL ( endPoint ) ) ;

        if ( user != null && password != null )
        {
            stub.setUsername ( user ) ;

            stub.setPassword ( password ) ;
        }

        /* No include file AGENT_INCLUDE.TXT */

        request.traceStub ( stub ) ;

        return new com.lansa.jsm.service.SOAPAgentResponse ( stub.executeTrigger( (com.processmaker.www.ExecuteTriggerRequest)request.getParameterValueObject ( "EXECUTETRIGGERREQUEST" ) ) ) ;
    }

    /*
        Operation - sendVariables
    */

    public final void setOperation_SENDVARIABLES ()
    {
    }

    /*
        Operation Request - sendVariables
    */

    public final void prepareRequest_SENDVARIABLES ( com.lansa.jsm.service.SOAPAgentRequest request ) throws Exception
    {
        request.prepareParameter ( "SENDVARIABLESREQUEST", com.processmaker.www.SendVariablesRequest.class, false, true ) ;
        request.prepareFragment ( "SENDVARIABLESREQUEST", new String[] { "NEWSENDVARIABLEREQUEST" }, com.processmaker.www.SendVariablesRequest.class, false, true, null ) ;
        request.prepareList ( "SENDVARIABLESREQUEST", new String[] { "NEWSENDVARIABLEREQUEST", "NEWCASEVARS" }, com.processmaker.www.VariableListStruct.class, true, true, "setVariables" ) ;
    }

    /*
        Operation Parameter - sendVariables
    */

    public final void setParameter_SENDVARIABLES_SENDVARIABLESREQUEST ( com.lansa.jsm.service.SOAPAgentParameter parameter, com.lansa.jsm.service.SOAPAgentBind bind ) throws Exception
    {
    }

    /*
        Operation Fragment - sendVariables
    */

    public final void setFragment_SENDVARIABLES_SENDVARIABLESREQUEST_NEWSENDVARIABLEREQUEST ( com.lansa.jsm.service.SOAPAgentRequestFragment fragment, com.lansa.jsm.service.SOAPAgentBind bind ) throws Exception
    {
        fragment.setEntity ( "caseId", bind.getFieldValue ( "PM_CASEID" ), null, null ) ;
        fragment.setEntity ( "sessionId", bind.getFieldValue ( "PM_SESSIONID" ), null, null ) ;
    }

    public final com.lansa.jsm.service.SOAPAgentList setList_SENDVARIABLES_NEWSENDVARIABLEREQUEST_NEWCASEVARS () throws Exception
    {
        return new com.lansa.jsm.service.SOAPAgentList ( new String[] { "NEWCASENAM", "NEWCASEVAL" }, new String[] { "name", "value" }, new com.lansa.jsm.service.SOAPEntityFormat[] { null, null } ) ;
    }

    /*
        Operation Response - sendVariables
    */

    public final void prepareResponse_SENDVARIABLES ( com.lansa.jsm.service.SOAPAgentResponse response ) throws Exception
    {
    }

    /*
        Operation Return - sendVariables
    */

    public final void getReturnParameter_SENDVARIABLES ( com.lansa.jsm.service.SOAPAgentResponse response, com.lansa.jsm.service.SOAPAgentBind bind ) throws Exception
    {
        bind.setFieldValue ( "PM_MESSAGE", response.getEntity ( "message", null ) ) ;
        bind.setFieldValue ( "PM_STATUSCODE", response.getEntity ( "status_code", null ) ) ;
        bind.setFieldValue ( "PM_TIMESTAMP", response.getEntity ( "timestamp", null ) ) ;
    }

    /*
        Operation Call - sendVariables
    */

    public final com.lansa.jsm.service.SOAPAgentResponse callOperation_SENDVARIABLES ( com.lansa.jsm.service.SOAPAgentRequest request, String user, String password, String url ) throws Exception
    {
        com.processmaker.www.ProcessMakerServiceLocator locator = new com.processmaker.www.ProcessMakerServiceLocator () ;

        String endPoint = locator.getProcessMakerServiceSoapAddress () ;

        if ( url != null )
        {
            endPoint = url ;
        }

        com.processmaker.www.ProcessMakerServiceSoapStub stub = (com.processmaker.www.ProcessMakerServiceSoapStub)locator.getProcessMakerServiceSoap ( new java.net.URL ( endPoint ) ) ;

        if ( user != null && password != null )
        {
            stub.setUsername ( user ) ;

            stub.setPassword ( password ) ;
        }

        /* No include file AGENT_INCLUDE.TXT */

        request.traceStub ( stub ) ;

        return new com.lansa.jsm.service.SOAPAgentResponse ( stub.sendVariables( (com.processmaker.www.SendVariablesRequest)request.getParameterValueObject ( "SENDVARIABLESREQUEST" ) ) ) ;
    }

    /*
        Operation - login
    */

    public final void setOperation_LOGIN ()
    {
    }

    /*
        Operation Request - login
    */

    public final void prepareRequest_LOGIN ( com.lansa.jsm.service.SOAPAgentRequest request ) throws Exception
    {
        request.prepareParameter ( "LOGIN", com.processmaker.www.Login.class, false, true ) ;
    }

    /*
        Operation Parameter - login
    */

    public final void setParameter_LOGIN_LOGIN ( com.lansa.jsm.service.SOAPAgentParameter parameter, com.lansa.jsm.service.SOAPAgentBind bind ) throws Exception
    {
        parameter.setEntity ( "password", bind.getFieldValue ( "PM_PASSWORD" ), null, null ) ;
        parameter.setEntity ( "userid", bind.getFieldValue ( "PM_USERID" ), null, null ) ;
    }

    /*
        Operation Response - login
    */

    public final void prepareResponse_LOGIN ( com.lansa.jsm.service.SOAPAgentResponse response ) throws Exception
    {
    }

    /*
        Operation Return - login
    */

    public final void getReturnParameter_LOGIN ( com.lansa.jsm.service.SOAPAgentResponse response, com.lansa.jsm.service.SOAPAgentBind bind ) throws Exception
    {
        bind.setFieldValue ( "PM_RESPONSE_MESSAGE", response.getEntity ( "message", null ) ) ;
        bind.setFieldValue ( "PM_RESPONSE_STATUS_CODE", response.getEntity ( "status_code", null ) ) ;
        bind.setFieldValue ( "PM_RESPONSE_TIMESTAMP", response.getEntity ( "timestamp", null ) ) ;
        bind.setFieldValue ( "PM_RESPONSE_VERSION", response.getEntity ( "version", null ) ) ;
    }

    /*
        Operation Call - login
    */

    public final com.lansa.jsm.service.SOAPAgentResponse callOperation_LOGIN ( com.lansa.jsm.service.SOAPAgentRequest request, String user, String password, String url ) throws Exception
    {
        com.processmaker.www.ProcessMakerServiceLocator locator = new com.processmaker.www.ProcessMakerServiceLocator () ;

        String endPoint = locator.getProcessMakerServiceSoapAddress () ;

        if ( url != null )
        {
            endPoint = url ;
        }

        com.processmaker.www.ProcessMakerServiceSoapStub stub = (com.processmaker.www.ProcessMakerServiceSoapStub)locator.getProcessMakerServiceSoap ( new java.net.URL ( endPoint ) ) ;

        if ( user != null && password != null )
        {
            stub.setUsername ( user ) ;

            stub.setPassword ( password ) ;
        }

        /* No include file AGENT_INCLUDE.TXT */

        request.traceStub ( stub ) ;

        return new com.lansa.jsm.service.SOAPAgentResponse ( stub.login( (com.processmaker.www.Login)request.getParameterValueObject ( "LOGIN" ) ) ) ;
    }

    /*
        Operation - processList
    */

    public final void setOperation_PROCESSLIST ()
    {
    }

    /*
        Operation Request - processList
    */

    public final void prepareRequest_PROCESSLIST ( com.lansa.jsm.service.SOAPAgentRequest request ) throws Exception
    {
        request.prepareParameter ( "PROCESSLISTREQUEST", com.processmaker.www.ProcessListRequest.class, false, true ) ;
    }

    /*
        Operation Parameter - processList
    */

    public final void setParameter_PROCESSLIST_PROCESSLISTREQUEST ( com.lansa.jsm.service.SOAPAgentParameter parameter, com.lansa.jsm.service.SOAPAgentBind bind ) throws Exception
    {
        parameter.setEntity ( "sessionId", bind.getFieldValue ( "PM_SESSIONID" ), null, null ) ;
    }

    /*
        Operation Response - processList
    */

    public final void prepareResponse_PROCESSLIST ( com.lansa.jsm.service.SOAPAgentResponse response ) throws Exception
    {
        response.prepareFragment ( new String[] { "PROCESSLISTRESPONSE" }, com.processmaker.www.ProcessListStruct.class, true, true, null ) ;
    }

    /*
        Operation Fragment - processList
    */

    public final void getFragment_PROCESSLIST_PROCESSLISTRESPONSE ( com.lansa.jsm.service.SOAPAgentResponseFragment fragment, com.lansa.jsm.service.SOAPAgentBind bind ) throws Exception
    {
        bind.setFieldValue ( "PM_GUID", fragment.getEntity ( "guid", null ) ) ;
        bind.setFieldValue ( "PM_NAME", fragment.getEntity ( "name", null ) ) ;
    }

    /*
        Operation Return - processList
    */

    public final void getReturnParameter_PROCESSLIST ( com.lansa.jsm.service.SOAPAgentResponse response, com.lansa.jsm.service.SOAPAgentBind bind ) throws Exception
    {
    }

    /*
        Operation Call - processList
    */

    public final com.lansa.jsm.service.SOAPAgentResponse callOperation_PROCESSLIST ( com.lansa.jsm.service.SOAPAgentRequest request, String user, String password, String url ) throws Exception
    {
        com.processmaker.www.ProcessMakerServiceLocator locator = new com.processmaker.www.ProcessMakerServiceLocator () ;

        String endPoint = locator.getProcessMakerServiceSoapAddress () ;

        if ( url != null )
        {
            endPoint = url ;
        }

        com.processmaker.www.ProcessMakerServiceSoapStub stub = (com.processmaker.www.ProcessMakerServiceSoapStub)locator.getProcessMakerServiceSoap ( new java.net.URL ( endPoint ) ) ;

        if ( user != null && password != null )
        {
            stub.setUsername ( user ) ;

            stub.setPassword ( password ) ;
        }

        /* No include file AGENT_INCLUDE.TXT */

        request.traceStub ( stub ) ;

        return new com.lansa.jsm.service.SOAPAgentResponse ( stub.processList( (com.processmaker.www.ProcessListRequest)request.getParameterValueObject ( "PROCESSLISTREQUEST" ) ) ) ;
    }

    /*
        Operation - caseList
    */

    public final void setOperation_CASELIST ()
    {
    }

    /*
        Operation Request - caseList
    */

    public final void prepareRequest_CASELIST ( com.lansa.jsm.service.SOAPAgentRequest request ) throws Exception
    {
        request.prepareParameter ( "CASELISTREQUEST", com.processmaker.www.CaseListRequest.class, false, true ) ;
    }

    /*
        Operation Parameter - caseList
    */

    public final void setParameter_CASELIST_CASELISTREQUEST ( com.lansa.jsm.service.SOAPAgentParameter parameter, com.lansa.jsm.service.SOAPAgentBind bind ) throws Exception
    {
        parameter.setEntity ( "sessionId", bind.getFieldValue ( "PM_SESSIONID" ), null, null ) ;
    }

    /*
        Operation Response - caseList
    */

    public final void prepareResponse_CASELIST ( com.lansa.jsm.service.SOAPAgentResponse response ) throws Exception
    {
        response.prepareFragment ( new String[] { "CASELISTRESPONSE" }, com.processmaker.www.CaseListStruct.class, true, true, null ) ;
    }

    /*
        Operation Fragment - caseList
    */

    public final void getFragment_CASELIST_CASELISTRESPONSE ( com.lansa.jsm.service.SOAPAgentResponseFragment fragment, com.lansa.jsm.service.SOAPAgentBind bind ) throws Exception
    {
        bind.setFieldValue ( "PM_DELINDEX", fragment.getEntity ( "delIndex", null ) ) ;
        bind.setFieldValue ( "PM_GUID", fragment.getEntity ( "guid", null ) ) ;
        bind.setFieldValue ( "PM_NAME", fragment.getEntity ( "name", null ) ) ;
        bind.setFieldValue ( "PM_PROCESSID", fragment.getEntity ( "processId", null ) ) ;
        bind.setFieldValue ( "PM_STATUS", fragment.getEntity ( "status", null ) ) ;
    }

    /*
        Operation Return - caseList
    */

    public final void getReturnParameter_CASELIST ( com.lansa.jsm.service.SOAPAgentResponse response, com.lansa.jsm.service.SOAPAgentBind bind ) throws Exception
    {
    }

    /*
        Operation Call - caseList
    */

    public final com.lansa.jsm.service.SOAPAgentResponse callOperation_CASELIST ( com.lansa.jsm.service.SOAPAgentRequest request, String user, String password, String url ) throws Exception
    {
        com.processmaker.www.ProcessMakerServiceLocator locator = new com.processmaker.www.ProcessMakerServiceLocator () ;

        String endPoint = locator.getProcessMakerServiceSoapAddress () ;

        if ( url != null )
        {
            endPoint = url ;
        }

        com.processmaker.www.ProcessMakerServiceSoapStub stub = (com.processmaker.www.ProcessMakerServiceSoapStub)locator.getProcessMakerServiceSoap ( new java.net.URL ( endPoint ) ) ;

        if ( user != null && password != null )
        {
            stub.setUsername ( user ) ;

            stub.setPassword ( password ) ;
        }

        /* No include file AGENT_INCLUDE.TXT */

        request.traceStub ( stub ) ;

        return new com.lansa.jsm.service.SOAPAgentResponse ( stub.caseList( (com.processmaker.www.CaseListRequest)request.getParameterValueObject ( "CASELISTREQUEST" ) ) ) ;
    }

    /*
        Operation - newCase
    */

    public final void setOperation_NEWCASE ()
    {
    }

    /*
        Operation Request - newCase
    */

    public final void prepareRequest_NEWCASE ( com.lansa.jsm.service.SOAPAgentRequest request ) throws Exception
    {
        request.prepareParameter ( "NEWCASEREQUEST", com.processmaker.www.NewCaseRequest.class, false, true ) ;
        request.prepareFragment ( "NEWCASEREQUEST", new String[] { "NEWCASEREQ" }, com.processmaker.www.NewCaseRequest.class, false, true, null ) ;
        request.prepareList ( "NEWCASEREQUEST", new String[] { "NEWCASEREQ", "NEWCASEVARS" }, com.processmaker.www.VariableListStruct.class, true, true, "setVariables" ) ;
    }

    /*
        Operation Parameter - newCase
    */

    public final void setParameter_NEWCASE_NEWCASEREQUEST ( com.lansa.jsm.service.SOAPAgentParameter parameter, com.lansa.jsm.service.SOAPAgentBind bind ) throws Exception
    {
    }

    /*
        Operation Fragment - newCase
    */

    public final void setFragment_NEWCASE_NEWCASEREQUEST_NEWCASEREQ ( com.lansa.jsm.service.SOAPAgentRequestFragment fragment, com.lansa.jsm.service.SOAPAgentBind bind ) throws Exception
    {
        fragment.setEntity ( "processId", bind.getFieldValue ( "PM_PROCESSID" ), null, null ) ;
        fragment.setEntity ( "sessionId", bind.getFieldValue ( "PM_SESSIONID" ), null, null ) ;
        fragment.setEntity ( "taskId", bind.getFieldValue ( "PM_TASKID" ), null, null ) ;
        fragment.setEntityEmpty ( "executeTriggers" ) ;
    }

    public final com.lansa.jsm.service.SOAPAgentList setList_NEWCASE_NEWCASEREQ_NEWCASEVARS () throws Exception
    {
        return new com.lansa.jsm.service.SOAPAgentList ( new String[] { "NEWCASENAM", "NEWCASEVAL" }, new String[] { "name", "value" }, new com.lansa.jsm.service.SOAPEntityFormat[] { null, null } ) ;
    }

    /*
        Operation Response - newCase
    */

    public final void prepareResponse_NEWCASE ( com.lansa.jsm.service.SOAPAgentResponse response ) throws Exception
    {
    }

    /*
        Operation Return - newCase
    */

    public final void getReturnParameter_NEWCASE ( com.lansa.jsm.service.SOAPAgentResponse response, com.lansa.jsm.service.SOAPAgentBind bind ) throws Exception
    {
        bind.setFieldValue ( "PM_CASEID", response.getEntity ( "caseId", null ) ) ;
        bind.setFieldValue ( "PM_CASENUMBER", response.getEntity ( "caseNumber", null ) ) ;
        bind.setFieldValue ( "PM_MESSAGE", response.getEntity ( "message", null ) ) ;
        bind.setFieldValue ( "PM_STATUSCODE", response.getEntity ( "status_code", null ) ) ;
        bind.setFieldValue ( "PM_TIMESTAMP", response.getEntity ( "timestamp", null ) ) ;
    }

    /*
        Operation Call - newCase
    */

    public final com.lansa.jsm.service.SOAPAgentResponse callOperation_NEWCASE ( com.lansa.jsm.service.SOAPAgentRequest request, String user, String password, String url ) throws Exception
    {
        com.processmaker.www.ProcessMakerServiceLocator locator = new com.processmaker.www.ProcessMakerServiceLocator () ;

        String endPoint = locator.getProcessMakerServiceSoapAddress () ;

        if ( url != null )
        {
            endPoint = url ;
        }

        com.processmaker.www.ProcessMakerServiceSoapStub stub = (com.processmaker.www.ProcessMakerServiceSoapStub)locator.getProcessMakerServiceSoap ( new java.net.URL ( endPoint ) ) ;

        if ( user != null && password != null )
        {
            stub.setUsername ( user ) ;

            stub.setPassword ( password ) ;
        }

        /* No include file AGENT_INCLUDE.TXT */

        request.traceStub ( stub ) ;

        return new com.lansa.jsm.service.SOAPAgentResponse ( stub.newCase( (com.processmaker.www.NewCaseRequest)request.getParameterValueObject ( "NEWCASEREQUEST" ) ) ) ;
    }

    /*
        Operation - routeCase
    */

    public final void setOperation_ROUTECASE ()
    {
    }

    /*
        Operation Request - routeCase
    */

    public final void prepareRequest_ROUTECASE ( com.lansa.jsm.service.SOAPAgentRequest request ) throws Exception
    {
        request.prepareParameter ( "ROUTECASEREQUEST", com.processmaker.www.RouteCaseRequest.class, false, true ) ;
    }

    /*
        Operation Parameter - routeCase
    */

    public final void setParameter_ROUTECASE_ROUTECASEREQUEST ( com.lansa.jsm.service.SOAPAgentParameter parameter, com.lansa.jsm.service.SOAPAgentBind bind ) throws Exception
    {
        parameter.setEntity ( "caseId", bind.getFieldValue ( "PM_CASEID" ), null, null ) ;
        parameter.setEntity ( "delIndex", bind.getFieldValue ( "PM_DELINDEX" ), null, null ) ;
        parameter.setEntity ( "sessionId", bind.getFieldValue ( "PM_SESSIONID" ), null, null ) ;
    }

    /*
        Operation Response - routeCase
    */

    public final void prepareResponse_ROUTECASE ( com.lansa.jsm.service.SOAPAgentResponse response ) throws Exception
    {
        response.prepareFragment ( new String[] { "ROUTECASERESPONSE" }, com.processmaker.www.RouteCaseResponse.class, false, true, null ) ;
        response.prepareList ( new String[] { "ROUTECASERESPONSE", "ROUTECASELISTRESPONSE" }, com.processmaker.www.RouteListStruct.class, true, true, "getRouting" ) ;
    }

    /*
        Operation Fragment - routeCase
    */

    public final void getFragment_ROUTECASE_ROUTECASERESPONSE ( com.lansa.jsm.service.SOAPAgentResponseFragment fragment, com.lansa.jsm.service.SOAPAgentBind bind ) throws Exception
    {
        bind.setFieldValue ( "PM_MESSAGE", fragment.getEntity ( "message", null ) ) ;
        bind.setFieldValue ( "PM_STATUSCODE", fragment.getEntity ( "status_code", null ) ) ;
        bind.setFieldValue ( "PM_TIMESTAMP", fragment.getEntity ( "timestamp", null ) ) ;
    }

    public final com.lansa.jsm.service.SOAPAgentList getList_ROUTECASE_ROUTECASERESPONSE_ROUTECASELISTRESPONSE () throws Exception
    {
        return new com.lansa.jsm.service.SOAPAgentList ( new String[] { "PM_DELINDEX", "PM_DELTHREAD", "PM_DELTHREADSTATUS", "PM_TASKID", "PM_TASKNAME", "PM_USERID", "PM_USERNAME" }, new String[] { "delIndex", "delThread", "delThreadStatus", "taskId", "taskName", "userId", "userName" }, new com.lansa.jsm.service.SOAPEntityFormat[] { null, null, null, null, null, null, null } ) ;
    }

    /*
        Operation Return - routeCase
    */

    public final void getReturnParameter_ROUTECASE ( com.lansa.jsm.service.SOAPAgentResponse response, com.lansa.jsm.service.SOAPAgentBind bind ) throws Exception
    {
    }

    /*
        Operation Call - routeCase
    */

    public final com.lansa.jsm.service.SOAPAgentResponse callOperation_ROUTECASE ( com.lansa.jsm.service.SOAPAgentRequest request, String user, String password, String url ) throws Exception
    {
        com.processmaker.www.ProcessMakerServiceLocator locator = new com.processmaker.www.ProcessMakerServiceLocator () ;

        String endPoint = locator.getProcessMakerServiceSoapAddress () ;

        if ( url != null )
        {
            endPoint = url ;
        }

        com.processmaker.www.ProcessMakerServiceSoapStub stub = (com.processmaker.www.ProcessMakerServiceSoapStub)locator.getProcessMakerServiceSoap ( new java.net.URL ( endPoint ) ) ;

        if ( user != null && password != null )
        {
            stub.setUsername ( user ) ;

            stub.setPassword ( password ) ;
        }

        /* No include file AGENT_INCLUDE.TXT */

        request.traceStub ( stub ) ;

        return new com.lansa.jsm.service.SOAPAgentResponse ( stub.routeCase( (com.processmaker.www.RouteCaseRequest)request.getParameterValueObject ( "ROUTECASEREQUEST" ) ) ) ;
    }

    /*
        Operation - getCaseInfo
    */

    public final void setOperation_GETCASEINFO ()
    {
    }

    /*
        Operation Request - getCaseInfo
    */

    public final void prepareRequest_GETCASEINFO ( com.lansa.jsm.service.SOAPAgentRequest request ) throws Exception
    {
        request.prepareParameter ( "GETCASEINFOREQUEST", com.processmaker.www.GetCaseInfoRequest.class, false, true ) ;
    }

    /*
        Operation Parameter - getCaseInfo
    */

    public final void setParameter_GETCASEINFO_GETCASEINFOREQUEST ( com.lansa.jsm.service.SOAPAgentParameter parameter, com.lansa.jsm.service.SOAPAgentBind bind ) throws Exception
    {
        parameter.setEntity ( "caseId", bind.getFieldValue ( "PM_CASEID" ), null, null ) ;
        parameter.setEntity ( "delIndex", bind.getFieldValue ( "PM_DELINDEX" ), null, null ) ;
        parameter.setEntity ( "sessionId", bind.getFieldValue ( "PM_SESSIONID" ), null, null ) ;
    }

    /*
        Operation Response - getCaseInfo
    */

    public final void prepareResponse_GETCASEINFO ( com.lansa.jsm.service.SOAPAgentResponse response ) throws Exception
    {
        response.prepareFragment ( new String[] { "GETCASEINFORESPONSE" }, com.processmaker.www.GetCaseInfoResponse.class, false, true, null ) ;
    }

    /*
        Operation Fragment - getCaseInfo
    */

    public final void getFragment_GETCASEINFO_GETCASEINFORESPONSE ( com.lansa.jsm.service.SOAPAgentResponseFragment fragment, com.lansa.jsm.service.SOAPAgentBind bind ) throws Exception
    {
        bind.setFieldValue ( "PM_CREATEUSER", fragment.getEntity ( "caseCreatorUser", null ) ) ;
        bind.setFieldValue ( "PM_CREATEUSERNAME", fragment.getEntity ( "caseCreatorUserName", null ) ) ;
        bind.setFieldValue ( "PM_CASEID", fragment.getEntity ( "caseId", null ) ) ;
        bind.setFieldValue ( "PM_CASENAME", fragment.getEntity ( "caseName", null ) ) ;
        bind.setFieldValue ( "PM_CASENUMBER", fragment.getEntity ( "caseNumber", null ) ) ;
        bind.setFieldValue ( "PM_CASEPARALELL", fragment.getEntity ( "caseParalell", null ) ) ;
        bind.setFieldValue ( "PM_CASESTATUS", fragment.getEntity ( "caseStatus", null ) ) ;
        bind.setFieldValue ( "PM_CREATEDATE", fragment.getEntity ( "createDate", null ) ) ;
        bind.setFieldValue ( "PM_MESSAGE", fragment.getEntity ( "message", null ) ) ;
        bind.setFieldValue ( "PM_PROCESSID", fragment.getEntity ( "processId", null ) ) ;
        bind.setFieldValue ( "PM_PROCESSNAME", fragment.getEntity ( "processName", null ) ) ;
        bind.setFieldValue ( "PM_STATUSCODE", fragment.getEntity ( "status_code", null ) ) ;
        bind.setFieldValue ( "PM_UPDATEDATE", fragment.getEntity ( "updateDate", null ) ) ;
    }

    /*
        Operation Return - getCaseInfo
    */

    public final void getReturnParameter_GETCASEINFO ( com.lansa.jsm.service.SOAPAgentResponse response, com.lansa.jsm.service.SOAPAgentBind bind ) throws Exception
    {
    }

    /*
        Operation Call - getCaseInfo
    */

    public final com.lansa.jsm.service.SOAPAgentResponse callOperation_GETCASEINFO ( com.lansa.jsm.service.SOAPAgentRequest request, String user, String password, String url ) throws Exception
    {
        com.processmaker.www.ProcessMakerServiceLocator locator = new com.processmaker.www.ProcessMakerServiceLocator () ;

        String endPoint = locator.getProcessMakerServiceSoapAddress () ;

        if ( url != null )
        {
            endPoint = url ;
        }

        com.processmaker.www.ProcessMakerServiceSoapStub stub = (com.processmaker.www.ProcessMakerServiceSoapStub)locator.getProcessMakerServiceSoap ( new java.net.URL ( endPoint ) ) ;

        if ( user != null && password != null )
        {
            stub.setUsername ( user ) ;

            stub.setPassword ( password ) ;
        }

        /* No include file AGENT_INCLUDE.TXT */

        request.traceStub ( stub ) ;

        return new com.lansa.jsm.service.SOAPAgentResponse ( stub.getCaseInfo( (com.processmaker.www.GetCaseInfoRequest)request.getParameterValueObject ( "GETCASEINFOREQUEST" ) ) ) ;
    }

    /*
        Operation - taskList
    */

    public final void setOperation_TASKLIST ()
    {
    }

    /*
        Operation Request - taskList
    */

    public final void prepareRequest_TASKLIST ( com.lansa.jsm.service.SOAPAgentRequest request ) throws Exception
    {
        request.prepareParameter ( "TASKLISTREQUEST", com.processmaker.www.TaskListRequest.class, false, true ) ;
    }

    /*
        Operation Parameter - taskList
    */

    public final void setParameter_TASKLIST_TASKLISTREQUEST ( com.lansa.jsm.service.SOAPAgentParameter parameter, com.lansa.jsm.service.SOAPAgentBind bind ) throws Exception
    {
        parameter.setEntity ( "sessionId", bind.getFieldValue ( "PM_SESSIONID" ), null, null ) ;
    }

    /*
        Operation Response - taskList
    */

    public final void prepareResponse_TASKLIST ( com.lansa.jsm.service.SOAPAgentResponse response ) throws Exception
    {
        response.prepareFragment ( new String[] { "TASKLISTRESPONSE" }, com.processmaker.www.TaskListStruct.class, true, true, null ) ;
    }

    /*
        Operation Fragment - taskList
    */

    public final void getFragment_TASKLIST_TASKLISTRESPONSE ( com.lansa.jsm.service.SOAPAgentResponseFragment fragment, com.lansa.jsm.service.SOAPAgentBind bind ) throws Exception
    {
        bind.setFieldValue ( "PM_GUID", fragment.getEntity ( "guid", null ) ) ;
        bind.setFieldValue ( "PM_INITIALTASK", fragment.getEntity ( "initialTask", null ) ) ;
        bind.setFieldValue ( "PM_NAME", fragment.getEntity ( "name", null ) ) ;
        bind.setFieldValue ( "PM_PROCESSID", fragment.getEntity ( "processId", null ) ) ;
    }

    /*
        Operation Return - taskList
    */

    public final void getReturnParameter_TASKLIST ( com.lansa.jsm.service.SOAPAgentResponse response, com.lansa.jsm.service.SOAPAgentBind bind ) throws Exception
    {
    }

    /*
        Operation Call - taskList
    */

    public final com.lansa.jsm.service.SOAPAgentResponse callOperation_TASKLIST ( com.lansa.jsm.service.SOAPAgentRequest request, String user, String password, String url ) throws Exception
    {
        com.processmaker.www.ProcessMakerServiceLocator locator = new com.processmaker.www.ProcessMakerServiceLocator () ;

        String endPoint = locator.getProcessMakerServiceSoapAddress () ;

        if ( url != null )
        {
            endPoint = url ;
        }

        com.processmaker.www.ProcessMakerServiceSoapStub stub = (com.processmaker.www.ProcessMakerServiceSoapStub)locator.getProcessMakerServiceSoap ( new java.net.URL ( endPoint ) ) ;

        if ( user != null && password != null )
        {
            stub.setUsername ( user ) ;

            stub.setPassword ( password ) ;
        }

        /* No include file AGENT_INCLUDE.TXT */

        request.traceStub ( stub ) ;

        return new com.lansa.jsm.service.SOAPAgentResponse ( stub.taskList( (com.processmaker.www.TaskListRequest)request.getParameterValueObject ( "TASKLISTREQUEST" ) ) ) ;
    }

    /*
        Operation - triggerList
    */

    public final void setOperation_TRIGGERLIST ()
    {
    }

    /*
        Operation Request - triggerList
    */

    public final void prepareRequest_TRIGGERLIST ( com.lansa.jsm.service.SOAPAgentRequest request ) throws Exception
    {
        request.prepareParameter ( "TRIGGERLISTREQUEST", com.processmaker.www.TriggerListRequest.class, false, true ) ;
    }

    /*
        Operation Parameter - triggerList
    */

    public final void setParameter_TRIGGERLIST_TRIGGERLISTREQUEST ( com.lansa.jsm.service.SOAPAgentParameter parameter, com.lansa.jsm.service.SOAPAgentBind bind ) throws Exception
    {
        parameter.setEntity ( "sessionId", bind.getFieldValue ( "PM_SESSIONID" ), null, null ) ;
    }

    /*
        Operation Response - triggerList
    */

    public final void prepareResponse_TRIGGERLIST ( com.lansa.jsm.service.SOAPAgentResponse response ) throws Exception
    {
        response.prepareFragment ( new String[] { "TRIGGERLISTRESPONSE" }, com.processmaker.www.TriggerListStruct.class, true, true, null ) ;
    }

    /*
        Operation Fragment - triggerList
    */

    public final void getFragment_TRIGGERLIST_TRIGGERLISTRESPONSE ( com.lansa.jsm.service.SOAPAgentResponseFragment fragment, com.lansa.jsm.service.SOAPAgentBind bind ) throws Exception
    {
        bind.setFieldValue ( "PM_GUID", fragment.getEntity ( "guid", null ) ) ;
        bind.setFieldValue ( "PM_NAME", fragment.getEntity ( "name", null ) ) ;
        bind.setFieldValue ( "PM_PROCESSID", fragment.getEntity ( "processId", null ) ) ;
    }

    /*
        Operation Return - triggerList
    */

    public final void getReturnParameter_TRIGGERLIST ( com.lansa.jsm.service.SOAPAgentResponse response, com.lansa.jsm.service.SOAPAgentBind bind ) throws Exception
    {
    }

    /*
        Operation Call - triggerList
    */

    public final com.lansa.jsm.service.SOAPAgentResponse callOperation_TRIGGERLIST ( com.lansa.jsm.service.SOAPAgentRequest request, String user, String password, String url ) throws Exception
    {
        com.processmaker.www.ProcessMakerServiceLocator locator = new com.processmaker.www.ProcessMakerServiceLocator () ;

        String endPoint = locator.getProcessMakerServiceSoapAddress () ;

        if ( url != null )
        {
            endPoint = url ;
        }

        com.processmaker.www.ProcessMakerServiceSoapStub stub = (com.processmaker.www.ProcessMakerServiceSoapStub)locator.getProcessMakerServiceSoap ( new java.net.URL ( endPoint ) ) ;

        if ( user != null && password != null )
        {
            stub.setUsername ( user ) ;

            stub.setPassword ( password ) ;
        }

        /* No include file AGENT_INCLUDE.TXT */

        request.traceStub ( stub ) ;

        return new com.lansa.jsm.service.SOAPAgentResponse ( stub.triggerList( (com.processmaker.www.TriggerListRequest)request.getParameterValueObject ( "TRIGGERLISTREQUEST" ) ) ) ;
    }

    /*
        Operation - inputDocumentProcessList
    */

    public final void setOperation_INPUTDOCUMENTPROCESSLIST ()
    {
    }

    /*
        Operation Request - inputDocumentProcessList
    */

    public final void prepareRequest_INPUTDOCUMENTPROCESSLIST ( com.lansa.jsm.service.SOAPAgentRequest request ) throws Exception
    {
        request.prepareParameter ( "INPUTDOCUMENTPROCESSLISTREQUEST", com.processmaker.www.InputDocumentProcessListRequest.class, false, true ) ;
    }

    /*
        Operation Parameter - inputDocumentProcessList
    */

    public final void setParameter_INPUTDOCUMENTPROCESSLIST_INPUTDOCUMENTPROCESSLISTREQUEST ( com.lansa.jsm.service.SOAPAgentParameter parameter, com.lansa.jsm.service.SOAPAgentBind bind ) throws Exception
    {
        parameter.setEntity ( "processId", bind.getFieldValue ( "PM_PROCESSID" ), null, null ) ;
        parameter.setEntity ( "sessionId", bind.getFieldValue ( "PM_SESSIONID" ), null, null ) ;
    }

    /*
        Operation Response - inputDocumentProcessList
    */

    public final void prepareResponse_INPUTDOCUMENTPROCESSLIST ( com.lansa.jsm.service.SOAPAgentResponse response ) throws Exception
    {
        response.prepareFragment ( new String[] { "INPUTDOCUMENTPROCESSLISTRESPONSE" }, com.processmaker.www.InputDocumentProcessListStruct.class, true, true, null ) ;
    }

    /*
        Operation Fragment - inputDocumentProcessList
    */

    public final void getFragment_INPUTDOCUMENTPROCESSLIST_INPUTDOCUMENTPROCESSLISTRESPONSE ( com.lansa.jsm.service.SOAPAgentResponseFragment fragment, com.lansa.jsm.service.SOAPAgentBind bind ) throws Exception
    {
        bind.setFieldValue ( "PM_DESC", fragment.getEntity ( "description", null ) ) ;
        bind.setFieldValue ( "PM_GUID", fragment.getEntity ( "guid", null ) ) ;
        bind.setFieldValue ( "PM_NAME", fragment.getEntity ( "name", null ) ) ;
    }

    /*
        Operation Return - inputDocumentProcessList
    */

    public final void getReturnParameter_INPUTDOCUMENTPROCESSLIST ( com.lansa.jsm.service.SOAPAgentResponse response, com.lansa.jsm.service.SOAPAgentBind bind ) throws Exception
    {
    }

    /*
        Operation Call - inputDocumentProcessList
    */

    public final com.lansa.jsm.service.SOAPAgentResponse callOperation_INPUTDOCUMENTPROCESSLIST ( com.lansa.jsm.service.SOAPAgentRequest request, String user, String password, String url ) throws Exception
    {
        com.processmaker.www.ProcessMakerServiceLocator locator = new com.processmaker.www.ProcessMakerServiceLocator () ;

        String endPoint = locator.getProcessMakerServiceSoapAddress () ;

        if ( url != null )
        {
            endPoint = url ;
        }

        com.processmaker.www.ProcessMakerServiceSoapStub stub = (com.processmaker.www.ProcessMakerServiceSoapStub)locator.getProcessMakerServiceSoap ( new java.net.URL ( endPoint ) ) ;

        if ( user != null && password != null )
        {
            stub.setUsername ( user ) ;

            stub.setPassword ( password ) ;
        }

        /* No include file AGENT_INCLUDE.TXT */

        request.traceStub ( stub ) ;

        return new com.lansa.jsm.service.SOAPAgentResponse ( stub.inputDocumentProcessList( (com.processmaker.www.InputDocumentProcessListRequest)request.getParameterValueObject ( "INPUTDOCUMENTPROCESSLISTREQUEST" ) ) ) ;
    }

    /*
        Operation - outputDocumentList
    */

    public final void setOperation_OUTPUTDOCUMENTLIST ()
    {
    }

    /*
        Operation Request - outputDocumentList
    */

    public final void prepareRequest_OUTPUTDOCUMENTLIST ( com.lansa.jsm.service.SOAPAgentRequest request ) throws Exception
    {
        request.prepareParameter ( "OUTPUTDOCUMENTLISTREQUEST", com.processmaker.www.OutputDocumentListRequest.class, false, true ) ;
    }

    /*
        Operation Parameter - outputDocumentList
    */

    public final void setParameter_OUTPUTDOCUMENTLIST_OUTPUTDOCUMENTLISTREQUEST ( com.lansa.jsm.service.SOAPAgentParameter parameter, com.lansa.jsm.service.SOAPAgentBind bind ) throws Exception
    {
        parameter.setEntity ( "caseId", bind.getFieldValue ( "PM_CASEID" ), null, null ) ;
        parameter.setEntity ( "sessionId", bind.getFieldValue ( "PM_SESSIONID" ), null, null ) ;
    }

    /*
        Operation Response - outputDocumentList
    */

    public final void prepareResponse_OUTPUTDOCUMENTLIST ( com.lansa.jsm.service.SOAPAgentResponse response ) throws Exception
    {
        response.prepareFragment ( new String[] { "OUTPUTDOCUMENTLISTRESPONSE" }, com.processmaker.www.OutputDocumentListStruct.class, true, true, null ) ;
    }

    /*
        Operation Fragment - outputDocumentList
    */

    public final void getFragment_OUTPUTDOCUMENTLIST_OUTPUTDOCUMENTLISTRESPONSE ( com.lansa.jsm.service.SOAPAgentResponseFragment fragment, com.lansa.jsm.service.SOAPAgentBind bind ) throws Exception
    {
        bind.setFieldValue ( "PM_DOCUSER", fragment.getEntity ( "createBy", null ) ) ;
        bind.setFieldValue ( "PM_DOCDATE", fragment.getEntity ( "createDate", null ) ) ;
        bind.setFieldValue ( "PM_DOCUMENT", fragment.getEntity ( "docId", null ) ) ;
        bind.setFieldValue ( "PM_DOCNAM", fragment.getEntity ( "filename", null ) ) ;
        bind.setFieldValue ( "PM_DOCUID", fragment.getEntity ( "guid", null ) ) ;
        bind.setFieldValue ( "PM_DOCINDEX", fragment.getEntity ( "index", null ) ) ;
        bind.setFieldValue ( "PM_DOCPATH", fragment.getEntity ( "link", null ) ) ;
        bind.setFieldValue ( "PM_DOCTYPE", fragment.getEntity ( "type", null ) ) ;
        bind.setFieldValue ( "PM_DOCVER", fragment.getEntity ( "version", null ) ) ;
    }

    /*
        Operation Return - outputDocumentList
    */

    public final void getReturnParameter_OUTPUTDOCUMENTLIST ( com.lansa.jsm.service.SOAPAgentResponse response, com.lansa.jsm.service.SOAPAgentBind bind ) throws Exception
    {
    }

    /*
        Operation Call - outputDocumentList
    */

    public final com.lansa.jsm.service.SOAPAgentResponse callOperation_OUTPUTDOCUMENTLIST ( com.lansa.jsm.service.SOAPAgentRequest request, String user, String password, String url ) throws Exception
    {
        com.processmaker.www.ProcessMakerServiceLocator locator = new com.processmaker.www.ProcessMakerServiceLocator () ;

        String endPoint = locator.getProcessMakerServiceSoapAddress () ;

        if ( url != null )
        {
            endPoint = url ;
        }

        com.processmaker.www.ProcessMakerServiceSoapStub stub = (com.processmaker.www.ProcessMakerServiceSoapStub)locator.getProcessMakerServiceSoap ( new java.net.URL ( endPoint ) ) ;

        if ( user != null && password != null )
        {
            stub.setUsername ( user ) ;

            stub.setPassword ( password ) ;
        }

        /* No include file AGENT_INCLUDE.TXT */

        request.traceStub ( stub ) ;

        return new com.lansa.jsm.service.SOAPAgentResponse ( stub.outputDocumentList( (com.processmaker.www.OutputDocumentListRequest)request.getParameterValueObject ( "OUTPUTDOCUMENTLISTREQUEST" ) ) ) ;
    }

    /*
        Operation - inputDocumentList
    */

    public final void setOperation_INPUTDOCUMENTLIST ()
    {
    }

    /*
        Operation Request - inputDocumentList
    */

    public final void prepareRequest_INPUTDOCUMENTLIST ( com.lansa.jsm.service.SOAPAgentRequest request ) throws Exception
    {
        request.prepareParameter ( "INPUTDOCUMENTLISTREQUEST", com.processmaker.www.InputDocumentListRequest.class, false, true ) ;
    }

    /*
        Operation Parameter - inputDocumentList
    */

    public final void setParameter_INPUTDOCUMENTLIST_INPUTDOCUMENTLISTREQUEST ( com.lansa.jsm.service.SOAPAgentParameter parameter, com.lansa.jsm.service.SOAPAgentBind bind ) throws Exception
    {
        parameter.setEntity ( "caseId", bind.getFieldValue ( "PM_CASEID" ), null, null ) ;
        parameter.setEntity ( "sessionId", bind.getFieldValue ( "PM_SESSIONID" ), null, null ) ;
    }

    /*
        Operation Response - inputDocumentList
    */

    public final void prepareResponse_INPUTDOCUMENTLIST ( com.lansa.jsm.service.SOAPAgentResponse response ) throws Exception
    {
        response.prepareFragment ( new String[] { "INPUTDOCUMENTLISTRESPONSE" }, com.processmaker.www.InputDocumentListStruct.class, true, true, null ) ;
    }

    /*
        Operation Fragment - inputDocumentList
    */

    public final void getFragment_INPUTDOCUMENTLIST_INPUTDOCUMENTLISTRESPONSE ( com.lansa.jsm.service.SOAPAgentResponseFragment fragment, com.lansa.jsm.service.SOAPAgentBind bind ) throws Exception
    {
        bind.setFieldValue ( "PM_DOCUSER", fragment.getEntity ( "createBy", null ) ) ;
        bind.setFieldValue ( "PM_DOCDATE", fragment.getEntity ( "createDate", null ) ) ;
        bind.setFieldValue ( "PM_DOCUMENT", fragment.getEntity ( "docId", null ) ) ;
        bind.setFieldValue ( "PM_DOCNAM", fragment.getEntity ( "filename", null ) ) ;
        bind.setFieldValue ( "PM_DOCUID", fragment.getEntity ( "guid", null ) ) ;
        bind.setFieldValue ( "PM_DOCINDEX", fragment.getEntity ( "index", null ) ) ;
        bind.setFieldValue ( "PM_DOCPATH", fragment.getEntity ( "link", null ) ) ;
        bind.setFieldValue ( "PM_DOCTYPE", fragment.getEntity ( "type", null ) ) ;
        bind.setFieldValue ( "PM_DOCVER", fragment.getEntity ( "version", null ) ) ;
    }

    /*
        Operation Return - inputDocumentList
    */

    public final void getReturnParameter_INPUTDOCUMENTLIST ( com.lansa.jsm.service.SOAPAgentResponse response, com.lansa.jsm.service.SOAPAgentBind bind ) throws Exception
    {
    }

    /*
        Operation Call - inputDocumentList
    */

    public final com.lansa.jsm.service.SOAPAgentResponse callOperation_INPUTDOCUMENTLIST ( com.lansa.jsm.service.SOAPAgentRequest request, String user, String password, String url ) throws Exception
    {
        com.processmaker.www.ProcessMakerServiceLocator locator = new com.processmaker.www.ProcessMakerServiceLocator () ;

        String endPoint = locator.getProcessMakerServiceSoapAddress () ;

        if ( url != null )
        {
            endPoint = url ;
        }

        com.processmaker.www.ProcessMakerServiceSoapStub stub = (com.processmaker.www.ProcessMakerServiceSoapStub)locator.getProcessMakerServiceSoap ( new java.net.URL ( endPoint ) ) ;

        if ( user != null && password != null )
        {
            stub.setUsername ( user ) ;

            stub.setPassword ( password ) ;
        }

        /* No include file AGENT_INCLUDE.TXT */

        request.traceStub ( stub ) ;

        return new com.lansa.jsm.service.SOAPAgentResponse ( stub.inputDocumentList( (com.processmaker.www.InputDocumentListRequest)request.getParameterValueObject ( "INPUTDOCUMENTLISTREQUEST" ) ) ) ;
    }
}
